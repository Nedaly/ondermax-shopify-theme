<div class="sticky-atc padding-{{ section.id }}" id="sticky-atc" style="display: none;">
    <div class="page-width">
        <div class="sticky-atc-content">
            <div class="product-info">
                {%- if section.settings.show_image -%}
                    <div class="product-image">
                        {%- if product.featured_media -%}
                            <img src="{{ product.featured_media | image_url: width: 60 }}" alt="{{ product.title }}" loading="lazy">
                        {%- endif -%}
                    </div>
                {%- endif -%}
                
                <div class="product-details">
                    {%- if section.settings.show_title -%}
                        <h3 class="product-title">{{ product.title }}</h3>
                    {%- endif -%}
                    
                    {%- if section.settings.show_price -%}
                        <div class="product-price">
                            <span class="price">{{ product.price | money }}</span>
                            {%- if product.compare_at_price > product.price -%}
                                <span class="compare-price">{{ product.compare_at_price | money }}</span>
                            {%- endif -%}
                        </div>
                    {%- endif -%}
                    
                    {%- if section.settings.show_sale_badge and product.compare_at_price > product.price -%}
                        <div class="sale-badge">
                            <span class="badge badge--success badge--small">
                                {{ 'products.product.on_sale' | t }}
                            </span>
                        </div>
                    {%- endif -%}
                </div>
            </div>
            
            <div class="action-buttons">
                {%- if section.settings.show_variant_picker -%}
                    <div class="variant-picker">
                        <select name="id" id="sticky-variant-select" class="variant-select">
                            {%- for variant in product.variants -%}
                                <option value="{{ variant.id }}" {% if variant == product.selected_or_first_available_variant %}selected{% endif %}>
                                    {{ variant.title }}
                                </option>
                            {%- endfor -%}
                        </select>
                    </div>
                {%- endif -%}
                
                <button type="button" class="sticky-atc-button" id="sticky-add-to-cart">
                    <span class="button-text">{{ section.settings.button_label | default: 'Add to Cart' }}</span>
                    <span class="button-loading" style="display: none;">
                        <svg class="spinner" width="16" height="16" viewBox="0 0 24 24">
                            <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2" fill="none" stroke-dasharray="31.416" stroke-dashoffset="31.416">
                                <animate attributeName="stroke-dasharray" dur="2s" values="0 31.416;15.708 15.708;0 31.416" repeatCount="indefinite"/>
                                <animate attributeName="stroke-dashoffset" dur="2s" values="0;-15.708;-31.416" repeatCount="indefinite"/>
                            </circle>
                        </svg>
                    </span>
                </button>
            </div>
        </div>
    </div>
</div>

<style>
    .sticky-atc {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        background: #fff;
        border-top: 1px solid #e5e7eb;
        box-shadow: 0 -4px 6px -1px rgba(0, 0, 0, 0.1);
        z-index: 1000;
        transition: transform 0.3s ease;
        transform: translateY(100%);
    }

    .sticky-atc.show {
        transform: translateY(0);
    }

    .sticky-atc-content {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 1rem;
        padding: 1rem 0;
    }

    .product-info {
        display: flex;
        align-items: center;
        gap: 1rem;
        flex: 1;
    }

    .product-image {
        width: 60px;
        height: 60px;
        border-radius: 8px;
        overflow: hidden;
        flex-shrink: 0;
    }

    .product-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .product-details {
        flex: 1;
        min-width: 0;
    }

    .product-title {
        font-family: 'Poppins', sans-serif;
        font-size: 16px;
        font-weight: 600;
        color: #1f2937;
        margin: 0 0 0.25rem 0;
        line-height: 1.2;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .product-price {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .price {
        font-family: 'Poppins', sans-serif;
        font-size: 18px;
        font-weight: 700;
        color: #1f2937;
    }

    .compare-price {
        font-family: 'Poppins', sans-serif;
        font-size: 14px;
        color: #9ca3af;
        text-decoration: line-through;
    }

    .sale-badge {
        margin-top: 0.25rem;
    }

    .action-buttons {
        display: flex;
        align-items: center;
        gap: 1rem;
        flex-shrink: 0;
    }

    .variant-picker {
        min-width: 120px;
    }

    .variant-select {
        width: 100%;
        padding: 0.5rem;
        border: 1px solid #d1d5db;
        border-radius: 6px;
        font-size: 14px;
        background: #fff;
    }

    .sticky-atc-button {
        background: linear-gradient(135deg, #1C8E8E 0%, #6D38B3 100%);
        color: white;
        border: none;
        border-radius: 8px;
        padding: 0.75rem 1.5rem;
        font-family: 'Poppins', sans-serif;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        min-width: 140px;
        justify-content: center;
    }

    .sticky-atc-button:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(28, 142, 142, 0.3);
    }

    .sticky-atc-button:active {
        transform: translateY(0);
    }

    .sticky-atc-button:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        transform: none;
    }

    .spinner {
        animation: spin 1s linear infinite;
    }

    @keyframes spin {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
    }

    /* Mobile-first responsive design */
    @media screen and (max-width: 768px) {
        .sticky-atc-content {
            flex-direction: column;
            gap: 1rem;
            padding: 1rem 0;
        }

        .product-info {
            width: 100%;
            justify-content: center;
        }

        .action-buttons {
            width: 100%;
            justify-content: center;
        }

        .sticky-atc-button {
            flex: 1;
            min-width: auto;
        }

        .variant-picker {
            min-width: 100px;
        }
    }

    @media screen and (max-width: 480px) {
        .product-title {
            font-size: 14px;
        }

        .price {
            font-size: 16px;
        }

        .sticky-atc-button {
            padding: 0.625rem 1.25rem;
            font-size: 14px;
        }
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const stickyATC = document.getElementById('sticky-atc');
    const stickyButton = document.getElementById('sticky-add-to-cart');
    const variantSelect = document.getElementById('sticky-variant-select');
    const buttonText = stickyButton.querySelector('.button-text');
    const buttonLoading = stickyButton.querySelector('.button-loading');
    
    let isVisible = false;
    let scrollThreshold = 300; // Show after scrolling 300px
    
    // Show/hide sticky ATC based on scroll position
    function toggleStickyATC() {
        const scrollY = window.scrollY;
        const shouldShow = scrollY > scrollThreshold;
        
        if (shouldShow && !isVisible) {
            stickyATC.style.display = 'block';
            setTimeout(() => {
                stickyATC.classList.add('show');
                isVisible = true;
            }, 10);
        } else if (!shouldShow && isVisible) {
            stickyATC.classList.remove('show');
            setTimeout(() => {
                stickyATC.style.display = 'none';
                isVisible = false;
            }, 300);
        }
    }
    
    // Handle sticky ATC button click
    stickyButton.addEventListener('click', function() {
        if (stickyButton.disabled) return;
        
        // Show loading state
        buttonText.style.display = 'none';
        buttonLoading.style.display = 'flex';
        stickyButton.disabled = true;
        
        // Get selected variant
        const variantId = variantSelect ? variantSelect.value : '{{ product.selected_or_first_available_variant.id }}';
        
        // Add to cart
        fetch('/cart/add.js', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                id: variantId,
                quantity: 1
            })
        })
        .then(response => response.json())
        .then(data => {
            // Success - show success state briefly
            buttonText.textContent = 'Added!';
            buttonText.style.display = 'block';
            buttonLoading.style.display = 'none';
            
            setTimeout(() => {
                buttonText.textContent = '{{ section.settings.button_label | default: "Add to Cart" }}';
                stickyButton.disabled = false;
            }, 2000);
        })
        .catch(error => {
            console.error('Error:', error);
            // Reset button state
            buttonText.textContent = '{{ section.settings.button_label | default: "Add to Cart" }}';
            buttonText.style.display = 'block';
            buttonLoading.style.display = 'none';
            stickyButton.disabled = false;
        });
    });
    
    // Listen for scroll events
    window.addEventListener('scroll', toggleStickyATC);
    
    // Initial check
    toggleStickyATC();
});
</script>

{% schema %}
{
    "name": "Sticky Add to Cart",
    "settings": [
        {
            "type": "header",
            "content": "Display Settings"
        },
        {
            "type": "text",
            "id": "button_label",
            "label": "Button Label",
            "default": "Add to Cart"
        },
        {
            "type": "checkbox",
            "id": "show_image",
            "label": "Show product image",
            "default": true
        },
        {
            "type": "checkbox",
            "id": "show_title",
            "label": "Show product title",
            "default": true
        },
        {
            "type": "checkbox",
            "id": "show_price",
            "label": "Show product price",
            "default": true
        },
        {
            "type": "checkbox",
            "id": "show_sale_badge",
            "label": "Show sale badge",
            "default": true
        },
        {
            "type": "checkbox",
            "id": "show_variant_picker",
            "label": "Show variant picker",
            "default": false
        },
        {
            "type": "header",
            "content": "Behavior"
        },
        {
            "type": "range",
            "id": "scroll_threshold",
            "min": 100,
            "max": 1000,
            "step": 50,
            "unit": "px",
            "label": "Show after scrolling",
            "default": 300
        }
    ],
    "presets": [
        {
            "name": "Sticky Add to Cart"
        }
    ]
}
{% endschema %}
